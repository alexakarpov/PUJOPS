---
- hosts: "{{ puj_hosts | default('alexakarpov') }}"
  vars_files:
    - vars.yml
  gather_facts: false
  become: yes
  become_user: ubuntu

  tasks:
    - name: prepare app dir
      become_user: root
      file:
        path: "{{ install_root }}"
        state: directory
        owner: ubuntu
        mode: 0755

    - name: Clone/pull project repo
      git:
        repo: "{{ project_repo }}"
        dest: "{{ install_root }}"
        accept_hostkey: yes
        version: "{{ repo_version }}"
        depth: 1

    - name: create the logs dir
      file:
        path: "{{ install_root }}/logs"
        state: directory
        owner: ubuntu

    - name: Install virtualenv
      pip:
        name: virtualenv
        state: present

    - name: Install pipenv
      pip:
        name: pipenv
        state: present
      become_user: root

    - name: Install uwsgi
      pip:
        name: uwsgi
        state: present

    - name: Initialize pipenv
      shell: "pipenv install --two"
      args:
        chdir: "{{install_root}}"

    - name: copy nginx config
      become: yes
      become_user: root
      template: src=files/nginx.j2 dest=/etc/nginx/sites-available/PUJ.conf

    - name: enable nginx site
      become_user: root
      file:
        src: /etc/nginx/sites-available/PUJ.conf
        dest: /etc/nginx/sites-enabled/PUJ.conf
        state: link
        force: true
      notify:
      - restart nginx

    - name: django prepare migrations
      django_manage:
        command: makemigrations
        app_path: "{{ install_root }}"
        virtualenv: "{{ venv_dir }}"

    - name: django prepare puj migrations
      django_manage:
        command: makemigrations puj
        app_path: "{{ install_root }}"
        virtualenv: "{{ venv_dir }}"

    - name: django migrate
      django_manage:
        command: migrate
        app_path: "{{ install_root }}"
        virtualenv: "{{ venv_dir }}"

    - name: django migrate puj
      django_manage:
        command: migrate puj
        app_path: "{{ install_root }}"
        virtualenv: "{{ venv_dir }}"

    # - name: django collectstatic
    #   django_manage:
    #     command: collectstatic
    #     app_path: "{{ install_root }}"
    #     virtualenv: "{{ venv_dir }}"

    - name: make sure nginx server is running
      become_user: root
      service: name=nginx state=started enabled=yes

    - name: setup UWSGI
      become_user: root
      file:
        path: /etc/uwsgi/vassals
        state: directory

    - name: configure UWSGI
      become_user: root
      copy:
        src: files/puj_uwsgi.ini
        dest: /etc/uwsgi/vassals/puj_uwsgi.ini

    - name: setup run script
      copy:
        src: files/puj_run.sh
        dest: "{{ install_root }}/puj_run.sh"
        owner: ubuntu
        group: www-data
        mode: 0774

    - name: set it up to launch on reboot
      become_user: root
      lineinfile:
        path: /etc/rc.local
        insertbefore: "^exit 0"
        line: /opt/PUJ/puj_run.sh
        state: present

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
      become: yes
      become_user: root

# vim:ft=ansible:
